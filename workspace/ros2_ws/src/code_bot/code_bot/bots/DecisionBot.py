import json
import openai
from typing import TypeVar, Generic, Dict

BotType = TypeVar('BotType')


class DecisionBot:
    '''
    A bot that produces Python code for solving a specific task
    '''
    def __init__(self, bot: BotType):
        self.bot = bot
        self.old_code = ""
        self.task = ""
        self.docs = ""

    def set_task(self, task: str):
        self.task = task

    def set_docs(self, docs: str):
        self.docs = docs

    def _contextualize(self, task: str, old_code: str, report: str, docs: str) -> str:
        prompt = f"Task: {task} | Old code: {old_code} | Report: {report} | Docs: {docs}. Use the task description and , where present, the code previously generated by\
            a chatbot to solve this specific task and a report produced by another chatbot that analyzes why the code failed to reach the goal to produce \
            a new code that works."
        return prompt
    
    def generate_code(self, report: str) -> str:
        prompt = self._contextualize(self.task, self.old_code, report, self.docs)
        new_code = self.chat(prompt)
        self.old_code = new_code
        return new_code